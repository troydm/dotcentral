#!/usr/bin/env perl

use strict;
use warnings;
use Cwd;
use Sys::Hostname;
use Term::ANSIColor;

# symbols
my $lambda = "\N{U+03BB}";
my $sep = "\N{U+E0B0}";
my $sep_thin = "\N{U+E0B1}";
my $git_symbol = "\N{U+E0A0}";

# variables
my $dir = getcwd();
my $home = $ENV{'HOME'};
my $user = getpwuid($<);
my $host = hostname();

# git related
my $git='';
if(-d "$dir/.git"){
    $git = `git rev-parse --abbrev-ref HEAD`;
    chomp $git;
}

# prettify path
$dir =~ s/^\Q$home\E/~/;
$dir =~ s/^\///;
$dir =~ s/\//$sep_thin /g;
$dir =~ s/^([^~])/\/$1/;
$dir =~ s/^$/\//;

binmode(STDOUT, ":utf8");

my $bg_color = "grey5";
my $alt_bg_color = "grey1";
my $user_color = "rgb533";
my $host_color = "rgb554";
my $dir_color  = "rgb543 bold";
my $git_color  = "rgb343";

print colored($user,"$user_color on_$bg_color"),
      colored("\@$host","$host_color on_$bg_color"),
      colored($sep,"$bg_color on_$alt_bg_color"),
      colored($dir,"$dir_color on_$alt_bg_color");
if($git){
      print colored($sep,"$alt_bg_color on_$bg_color"),
            colored("$git_symbol$git","$git_color on_$bg_color"),
            colored($sep,$bg_color),"\n";
}else{
      print colored($sep,$alt_bg_color),"\n";
}
#print colored(" $lambda ","black on_$alt_color"),
#      colored($sep,"$alt_color on_black");
