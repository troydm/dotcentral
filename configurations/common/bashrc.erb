# skip this file on non-interactive shell
[ -z "$PS1" ] && return

# global variables
export PAGER=less
export EDITOR=vim
export GPG_TTY=$(tty)

# set vi command editing mode
set -o vi

# dircolors
# enable color support of ls and also add handy aliases
<% if linux? %>
if [ -f ~/.dircolors ]; then
    eval "$(dircolors -b ~/.dircolors)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
<% elsif macos? %>
export LSCOLORS=DxExcEFCCxDxHx
alias ls='ls -G'
<% end %>

# some more ls aliases
alias ll='ls -Ahl'
alias la='ls -A'
alias lg='la | grep'
alias l=ls

# useful aliases
alias v=vagrant
alias myip="curl -s icanhazip.com"
alias path="echo $PATH | tr ':' '\n'"

# add_PATH
add_PATH(){
    local d="${1/#\~/$HOME}"
    echo $PATH | tr ':' '\n' | grep -Fx "$d" >/dev/null || export PATH="$d":$PATH
}

# add LD_LIBRARY_PATH
add_LD_LIBRARY_PATH(){
    local d="${1/#\~/$HOME}"
    echo $LD_LIBRARY_PATH | tr ':' '\n' | grep -Fx "$d" >/dev/null || export LD_LIBRARY_PATH="$d":$LD_LIBRARY_PATH
}

# add MANPATH
add_MANPATH(){
    local d="${1/#\~/$HOME}"
    echo $MANPATH | tr ':' '\n' | grep -Fx "$d" >/dev/null || export MANPATH="$d":$MANPATH
}

<% if linux? %>
# ptop
ptop() {
    top -d 1 -c -p `pgrep $1 | paste -sd, -`
}

# vtop
vtop() {
    if pgrep VBoxHeadless > /dev/null; then
        top -d 1 -c `pgrep VBoxHeadless | awk '{print "-p " $0}' | tr '\n' ' '` -d 1
    else
        echo -e "There are no VirtualBox VM's currently running";
    fi
}

# GnuPGP Encryption/Decryption
e() {
    gpg2 -r 82430AB9 -o "$1.gpg" -e $1
}

d() {
    gpg2 -o "${1%.*}" -d $1
}

<% end %>

# fcd
fcd() { fcdclient "$@"; cd "$(cat /tmp/fcd_$USER)"; rm -f /tmp/fcd_$USER; }
alias z=fcd

# Add common directories to PATH
add_PATH ~/.local/bin
add_PATH <%= pwd+"/bin" %>
add_PATH .
add_PATH /usr/local/bin

# less colors and options
export LESS='-RS#3M~g'
export LESS_TERMCAP_md=$'\E[38;5;223m'
export LESS_TERMCAP_us=$'\E[38;5;181m'
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_so=$'\E[38;5;223m\E[48;5;238m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_ue=$'\E[0m'

# zsh only related options
if [ -n "$ZSH_VERSION" ]; then
    HISTFILE=~/.zsh_history
    HISTSIZE=10000
    SAVEHIST=100000
    setopt APPEND_HISTORY
    setopt AUTO_CD
    setopt LONGLISTJOBS

    # vi mode for zsh
    bindkey -v

    # vi mode keys
    bindkey '^p' up-history
    bindkey '^n' down-history
    bindkey '^?' backward-delete-char
    bindkey '^h' backward-delete-char
    bindkey '^w' backward-kill-word
    bindkey '^r' history-incremental-search-backward
    bindkey '^[[3~' delete-char
    bindkey '^[[Z' reverse-menu-complete
    export KEYTIMEOUT=1

    # auto completion
    zstyle ':completion:*' menu select
    zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS} 'ma=48;5;236;38;5;223'
    zstyle :compinstall filename "$HOME/.zshrc"

    autoload -Uz compinit && compinit
fi

# Add powerline prompt
if [ "$TERM" = "xterm-256color" ] || [ "$TERM" = "screen-256color" ]; then
    if [ -n "$ZSH_VERSION" ]; then
        PS1_NORMAL="%{[1m[37;1m[48;5;236m%} λ %{[0m[38;5;236m%}%{[0m%} "
        PS1_INSERT="%{[1m[38;5;222m[48;5;236m%} λ %{[0m[38;5;236m%}%{[0m%} "
        PS2_NORMAL="%{[0m[37;1m[48;5;236m%} ← %{[0m[38;5;236m%}%{[0m%} "
        PS2_INSERT="%{[0m[38;5;222m[48;5;236m%} ← %{[0m[38;5;236m%}%{[0m%} "
        function precmd(){ powerline 2> /dev/null; }
        function zle-line-init {
            PS1="${${KEYMAP/vicmd/$PS1_NORMAL}/(main|viins)/$PS1_INSERT}"
            PS2="${${KEYMAP/vicmd/$PS2_NORMAL}/(main|viins)/$PS2_INSERT}"
            zle reset-prompt
        }
        function zle-keymap-select {
            PS1="${${KEYMAP/vicmd/$PS1_NORMAL}/(main|viins)/$PS1_INSERT}"
            PS2="${${KEYMAP/vicmd/$PS2_NORMAL}/(main|viins)/$PS2_INSERT}"
            zle reset-prompt
        }
        zle -N zle-line-init
        zle -N zle-keymap-select
    else
        PROMPT_COMMAND='powerline 2> /dev/null'
        if [[ $((${BASH_VERSION::1}*10+${BASH_VERSION:2:1})) < 44 ]]; then
          PS1="\[\033[1m\033[38;5;222m\033[48;5;236m\] λ \[\033[0m\033[38;5;236m\]\[\033[0m\] "
          PS2="\[\033[0m\033[38;5;222m\033[48;5;236m\] ← \[\033[0m\033[38;5;236m\]\[\033[0m\] "
        else
          PS1=" λ \[\033[0m\033[38;5;236m\]\[\033[0m\] "
          PS2=" ← \[\033[0m\033[38;5;236m\]\[\033[0m\] "
          bind 'set editing-mode vi'
          bind 'set show-mode-in-prompt on'
          bind 'set vi-ins-mode-string \1\033[1m\033[38;5;222m\033[48;5;236m\2'
          bind 'set vi-cmd-mode-string \1\033[1m\033[37;1m\033[48;5;236m\2'
        fi
    fi
fi
