#!/usr/bin/env perl

use strict;
use warnings;
use HTTP::Request::Common qw(POST);
use LWP::UserAgent;
use LWP::Protocol::https;
use Proc::Daemon;
use File::Basename 'dirname';
use Cwd 'abs_path';

# get notifymyandroid api key from enviroment variable
die 'notifymyandroid API key wasn\'t specified in NOTIFYMYANDROID_API_KEY enviroment variable' unless exists $ENV{NOTIFYMYANDROID_API_KEY};
my $apikey = $ENV{NOTIFYMYANDROID_API_KEY};

sub notify {
    my $info = shift;
    my $ua = LWP::UserAgent->new;

    my $req = POST 'https://www.notifymyandroid.com/publicapi/notify',
                  [ apikey => $apikey,
                    application =>'tmux-info',
                    event=>'troynas server is overheating!',
                    description=>$info,
                    priority=>'2'];

    return $ua->request($req)->as_string;
}

if(@ARGV == 1 && $ARGV[0] eq 'notify-test'){
    print notify('This is notify test CPU:46.5°C 14.0°C MB:45.0°C RPM: CPU 1521 PSU 402 SSD:42°C 46°C HDD:45°C 42°C');
    exit(0);
}

Proc::Daemon::Init;

# determine sata devices
my $ssd1dev = '/dev/sda';
my $ssd2dev = '/dev/sdd';
my $hdd1dev = '/dev/sdb';
my $hdd2dev = '/dev/sdc';
foreach (split "\n", `lsscsi`){
    my @a = split(" ", $_);
    if($_ =~ q/Samsung SSD 850/){
        $ssd1dev = pop(@a);
    }elsif($_ =~ q/TS128GSSD230S/){
        $ssd2dev = pop(@a);
    }elsif($_ =~ q/HGST HDN726040AL/){
        $hdd1dev = pop(@a);
    }elsif($_ =~ q/HGST HDN724030AL/){
        $hdd2dev = pop(@a);
    }
}

my $continue = 1;
my $notified = 0;
my $critical = 0;

$SIG{TERM} = sub { $continue = 0; };
my $hdd1='35';
my $hdd2='35';

sub update(){
my $sys = `sensors`;

my $cpu;
my $core;
my $mb;
my $cpurpm;
my $psurpm;

foreach my $line (split "\n", $sys ){
    if($line =~ q/^temp1:\s+\+(\d+.\d+)/){
        $core = $1;
    }
    if($line =~ q/^SYSTIN:\s+\+(\d+.\d+)/){
        $mb = $1;
    }
    if($line =~ q/^CPUTIN:\s+\+(\d+.\d+)/){
        $cpu = $1;
    }
    if($line =~ q/^fan2:\s+(\d+)/){
        $cpurpm = $1;
    }
    if($line =~ q/^fan1:\s+(\d+)/){
        $psurpm = $1;
    }
}

if(time() % 300 == 0){
    my $hddtemp = `/usr/sbin/hddtemp --debug $hdd1dev | grep field\\(194\\)`;
    chop $hddtemp;
    if($hddtemp =~ q/\=\s+(\d+.?\d*)/){
        $hdd1 = $1;
    }

    $hddtemp = `/usr/sbin/hddtemp --debug $hdd2dev | grep field\\(194\\)`;
    chop $hddtemp;
    if($hddtemp =~ q/\=\s+(\d+.?\d*)/){
        $hdd2 = $1;
    }
}

my $ssd;
my $ssdtemp = `/usr/sbin/hddtemp --debug $ssd1dev | grep field\\(190\\)`;
chop $ssdtemp;
if($ssdtemp =~ q/\=\s+(\d+.?\d*)/){
    $ssd = $1;
}

my $ssd2;
$ssdtemp = `/usr/sbin/hddtemp --debug $ssd2dev | grep field\\(194\\)`;
chop $ssdtemp;
if($ssdtemp =~ q/\=\s+(\d+.?\d*)/){
    $ssd2 = $1;
}

my $ret = "CPU:$cpu"."°C $core"."°C MB:$mb"."°C RPM: CPU $cpurpm PSU $psurpm SSD:$ssd"."°C $ssd2"."°C HDD:$hdd1"."°C $hdd2"."°C";
open my $fh, '>', '/tmp/tmux-info';
print $fh $ret;
close $fh;

if($cpu > 75 || $core > 73 || $mb > 73 || $cpurpm < 500 || $psurpm < 350 || $ssd > 65 || $ssd2 > 65 || $hdd1 > 62 || $hdd2 > 62){
    if(!$notified && notify($ret) =~ m/success/){
        $notified = 1;
    }
}else{
    $notified = 0;
    $critical = 0;
}

if($cpu >= 85 || $core >= 85 || $mb >= 85 || $cpurpm < 400 || $psurpm < 350 || $ssd > 70 || $ssd2 > 70 || $hdd1 > 65 || $hdd2 > 65){
    $critical++;
}

if($critical >= 30){
     system("cp /tmp/tmux-info /home/troydm/critical-shutdown.log");
     exec("sudo shutdown -h now");
}

return $ret;
}

while($continue){
update;
sleep 1;
}

